{"ast":null,"code":"var _jsxFileName = \"/home/ransom/Documents/frontend/nextjs/redux_app/pages/_app.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\n//React\nimport React from 'react'; //Third-parties\n\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { Provider } from 'react-redux';\nimport App from 'next/app';\nimport withRedux from 'next-redux-wrapper';\nimport { ThemeProvider } from 'styled-components'; //custom\n\nimport rootReducer from '../store'; //the bs styles\n\nconst makeStore = (initialState, options) => {\n  return createStore(rootReducer, initialState, compose(applyMiddleware(thunk)));\n};\n\nconst theme = {};\n\nclass MyApp extends App {\n  componentDidMount() {\n    const jssStyles = document.querySelector('#jss-server-side');\n\n    if (jssStyles && jssStyles.parentNode) {\n      jssStyles.parentNode.removeChild(jssStyles);\n    }\n  }\n\n  render() {\n    const {\n      Component,\n      pageProps,\n      store\n    } = this.props;\n    return __jsx(Provider, {\n      store: store,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }\n    }, __jsx(ThemeProvider, {\n      theme: theme,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }\n    }, __jsx(Component, _extends({}, pageProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }\n    }))));\n  }\n\n}\n\n;\nexport default withRedux(makeStore)(MyApp);","map":{"version":3,"sources":["/home/ransom/Documents/frontend/nextjs/redux_app/pages/_app.js"],"names":["React","createStore","compose","applyMiddleware","thunk","Provider","App","withRedux","ThemeProvider","rootReducer","makeStore","initialState","options","theme","MyApp","componentDidMount","jssStyles","document","querySelector","parentNode","removeChild","render","Component","pageProps","store","props"],"mappings":";;;;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAAQC,WAAR,EAAoBC,OAApB,EAA4BC,eAA5B,QAAkD,OAAlD;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAAQC,QAAR,QAAuB,aAAvB;AACA,OAAOC,GAAP,MAAgB,UAAhB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,SAAQC,aAAR,QAA4B,mBAA5B,C,CACA;;AACA,OAAOC,WAAP,MAAwB,UAAxB,C,CACA;;AAEA,MAAMC,SAAS,GAAG,CAACC,YAAD,EAAcC,OAAd,KAA0B;AACxC,SAAOX,WAAW,CAACQ,WAAD,EAAaE,YAAb,EAA0BT,OAAO,CAC/CC,eAAe,CAACC,KAAD,CADgC,CAAjC,CAAlB;AAGH,CAJD;;AAKA,MAAMS,KAAK,GAAG,EAAd;;AAIA,MAAMC,KAAN,SAAoBR,GAApB,CAAwB;AACpBS,EAAAA,iBAAiB,GAAE;AACf,UAAMC,SAAS,GAAGC,QAAQ,CAACC,aAAT,CAAuB,kBAAvB,CAAlB;;AACA,QAAGF,SAAS,IAAIA,SAAS,CAACG,UAA1B,EAAqC;AACjCH,MAAAA,SAAS,CAACG,UAAV,CAAqBC,WAArB,CAAiCJ,SAAjC;AACH;AACJ;;AACDK,EAAAA,MAAM,GAAE;AACJ,UAAM;AAACC,MAAAA,SAAD;AAAWC,MAAAA,SAAX;AAAqBC,MAAAA;AAArB,QAA8B,KAAKC,KAAzC;AACA,WAEQ,MAAC,QAAD;AAAU,MAAA,KAAK,EAAED,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,aAAD;AAAe,MAAA,KAAK,EAAEX,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,MAAC,SAAD,eAAeU,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADA,CADJ,CAFR;AASH;;AAlBmB;;AAmBvB;AAED,eAAehB,SAAS,CAACG,SAAD,CAAT,CAAqBI,KAArB,CAAf","sourcesContent":["//React\nimport React from 'react';\n//Third-parties\nimport {createStore,compose,applyMiddleware} from 'redux';\nimport thunk from 'redux-thunk';\nimport {Provider} from 'react-redux';\nimport App from 'next/app';\nimport withRedux from 'next-redux-wrapper';\nimport {ThemeProvider} from 'styled-components';\n//custom\nimport rootReducer from '../store';\n//the bs styles\n\nconst makeStore = (initialState,options) => {\n    return createStore(rootReducer,initialState,compose(\n        applyMiddleware(thunk),\n    ));\n};\nconst theme = {\n\n}\n\nclass MyApp extends App {\n    componentDidMount(){\n        const jssStyles = document.querySelector('#jss-server-side');\n        if(jssStyles && jssStyles.parentNode){\n            jssStyles.parentNode.removeChild(jssStyles)\n        }\n    }\n    render(){\n        const {Component,pageProps,store} = this.props;\n        return (\n            \n                <Provider store={store}>\n                    <ThemeProvider theme={theme}>\n                    <Component {...pageProps} />\n                    </ThemeProvider>\n                </Provider>\n            \n        )\n    }\n};\n\nexport default withRedux(makeStore)(MyApp);"]},"metadata":{},"sourceType":"module"}