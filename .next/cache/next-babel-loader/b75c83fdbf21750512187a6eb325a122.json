{"ast":null,"code":"var _jsxFileName = \"/home/ransom/Documents/frontend/nextjs/redux_app/pages/index.js\";\nvar __jsx = React.createElement;\n//React\nimport React from 'react'; //third-party\n\nimport { connect } from 'react-redux'; //components\n\nimport Layout from '../components/Layout';\nimport { fetchHostels } from '../store/hostels';\n\nconst Default = props => {\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 17\n    }\n  }, \"The real content of redux \"), props.loading ? __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 25\n    }\n  }, \"Loading\") : props.hostels.map((hostel, i) => __jsx(\"img\", {\n    src: hostel['image'],\n    alt: \"\",\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 29\n    }\n  })));\n};\n\nDefault.getInitialProps = ({\n  store,\n  isServer,\n  pathname,\n  query\n}) => {\n  store.dispatch(fetchHostels());\n};\n\nconst mapToProps = state => ({\n  loading: state.hostels.loading,\n  hostels: state.hostels.hostels\n});\n\nexport default connect(mapToProps, null)(Default);","map":{"version":3,"sources":["/home/ransom/Documents/frontend/nextjs/redux_app/pages/index.js"],"names":["React","connect","Layout","fetchHostels","Default","props","loading","hostels","map","hostel","i","getInitialProps","store","isServer","pathname","query","dispatch","mapToProps","state"],"mappings":";;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAAQC,OAAR,QAAsB,aAAtB,C,CACA;;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAAQC,YAAR,QAA2B,kBAA3B;;AAEA,MAAOC,OAAO,GAAIC,KAAD,IAAW;AACpB,SACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADJ,EAGQA,KAAK,CAACC,OAAN,GACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,GAGID,KAAK,CAACE,OAAN,CAAcC,GAAd,CAAkB,CAACC,MAAD,EAAQC,CAAR,KACd;AAAK,IAAA,GAAG,EAAED,MAAM,CAAC,OAAD,CAAhB;AAA2B,IAAA,GAAG,EAAC,EAA/B;AAAkC,IAAA,GAAG,EAAEC,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CANZ,CADJ;AAeP,CAhBD;;AAiBAN,OAAO,CAACO,eAAR,GAA0B,CAAC;AAACC,EAAAA,KAAD;AAAOC,EAAAA,QAAP;AAAgBC,EAAAA,QAAhB;AAAyBC,EAAAA;AAAzB,CAAD,KAAqC;AAC3DH,EAAAA,KAAK,CAACI,QAAN,CAAeb,YAAY,EAA3B;AACH,CAFD;;AAGA,MAAMc,UAAU,GAAGC,KAAK,KAAK;AACzBZ,EAAAA,OAAO,EAACY,KAAK,CAACX,OAAN,CAAcD,OADG;AAEzBC,EAAAA,OAAO,EAACW,KAAK,CAACX,OAAN,CAAcA;AAFG,CAAL,CAAxB;;AAIA,eAAeN,OAAO,CAACgB,UAAD,EAAY,IAAZ,CAAP,CAAyBb,OAAzB,CAAf","sourcesContent":["//React\nimport React from 'react';\n//third-party\nimport {connect} from 'react-redux';\n//components\nimport Layout from '../components/Layout';\nimport {fetchHostels} from '../store/hostels';\n\nconst  Default = (props) => {\n        return (\n            <Layout>\n                <p>The real content of redux </p>\n                {\n                    props.loading ? (\n                        <p>Loading</p>\n                    ) : (\n                        props.hostels.map((hostel,i) => (\n                            <img src={hostel['image']} alt=\"\" key={i}/>\n                        ))\n                    )\n                }\n            </Layout>\n        )\n    \n};\nDefault.getInitialProps = ({store,isServer,pathname,query}) => {\n    store.dispatch(fetchHostels());\n}\nconst mapToProps = state => ({\n    loading:state.hostels.loading,\n    hostels:state.hostels.hostels\n})\nexport default connect(mapToProps,null)(Default);"]},"metadata":{},"sourceType":"module"}