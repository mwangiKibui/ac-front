{"ast":null,"code":"var _jsxFileName = \"/home/ransom/Documents/frontend/nextjs/redux_app/pages/_app.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\n//React\nimport React from 'react'; //Third-parties\n\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk'; // import {composeWithDevTools} from 'redux-devtools-extension';\n\nimport { Provider } from 'react-redux';\nimport App, { Container } from 'next/app';\nimport withRedux from 'next-redux-wrapper'; //custom\n\nimport rootReducer from '../store';\n\nconst makeStore = (initialState, options) => {\n  return createStore(rootReducer, initialState, compose(applyMiddleware(thunk)));\n};\n\nclass MyApp extends App {\n  static async getInitialProps({\n    Component,\n    ctx\n  }) {\n    const pageProps = Component.getInitialProps ? await Component.getInitialProps(ctx) : {};\n    return {\n      pageProps\n    };\n  }\n\n  render() {\n    const {\n      Component,\n      pageProps,\n      store\n    } = this.props;\n    return __jsx(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }\n    }, __jsx(Provider, {\n      store: store,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }\n    }, __jsx(Component, _extends({}, pageProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }\n    }))));\n  }\n\n}\n\n;\nexport default withRedux(makeStore)(MyApp);","map":{"version":3,"sources":["/home/ransom/Documents/frontend/nextjs/redux_app/pages/_app.js"],"names":["React","createStore","compose","applyMiddleware","thunk","Provider","App","Container","withRedux","rootReducer","makeStore","initialState","options","MyApp","getInitialProps","Component","ctx","pageProps","render","store","props"],"mappings":";;;;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAAQC,WAAR,EAAoBC,OAApB,EAA4BC,eAA5B,QAAkD,OAAlD;AACA,OAAOC,KAAP,MAAkB,aAAlB,C,CACA;;AACA,SAAQC,QAAR,QAAuB,aAAvB;AACA,OAAOC,GAAP,IAAYC,SAAZ,QAA4B,UAA5B;AACA,OAAOC,SAAP,MAAsB,oBAAtB,C,CACA;;AACA,OAAOC,WAAP,MAAwB,UAAxB;;AAGA,MAAMC,SAAS,GAAG,CAACC,YAAD,EAAcC,OAAd,KAA0B;AACxC,SAAOX,WAAW,CAACQ,WAAD,EAAaE,YAAb,EAA0BT,OAAO,CAC/CC,eAAe,CAACC,KAAD,CADgC,CAAjC,CAAlB;AAGH,CAJD;;AAMA,MAAMS,KAAN,SAAoBP,GAApB,CAAwB;AACpB,eAAaQ,eAAb,CAA6B;AAACC,IAAAA,SAAD;AAAWC,IAAAA;AAAX,GAA7B,EAA6C;AAEzC,UAAMC,SAAS,GAAGF,SAAS,CAACD,eAAV,GAA4B,MAAMC,SAAS,CAACD,eAAV,CAA0BE,GAA1B,CAAlC,GAAmE,EAArF;AAEA,WAAO;AAACC,MAAAA;AAAD,KAAP;AACH;;AACDC,EAAAA,MAAM,GAAE;AACJ,UAAM;AAACH,MAAAA,SAAD;AAAWE,MAAAA,SAAX;AAAqBE,MAAAA;AAArB,QAA8B,KAAKC,KAAzC;AACA,WACI,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,QAAD;AAAU,MAAA,KAAK,EAAED,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,SAAD,eAAeF,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADJ,CADJ,CADJ;AAOH;;AAhBmB;;AAiBvB;AAED,eAAeT,SAAS,CAACE,SAAD,CAAT,CAAqBG,KAArB,CAAf","sourcesContent":["//React\nimport React from 'react';\n//Third-parties\nimport {createStore,compose,applyMiddleware} from 'redux';\nimport thunk from 'redux-thunk';\n// import {composeWithDevTools} from 'redux-devtools-extension';\nimport {Provider} from 'react-redux';\nimport App,{Container} from 'next/app';\nimport withRedux from 'next-redux-wrapper';\n//custom\nimport rootReducer from '../store';\n\n\nconst makeStore = (initialState,options) => {\n    return createStore(rootReducer,initialState,compose(\n        applyMiddleware(thunk)\n    ));\n};\n\nclass MyApp extends App {\n    static async getInitialProps({Component,ctx}){\n\n        const pageProps = Component.getInitialProps ? await Component.getInitialProps(ctx) : {};\n\n        return {pageProps};\n    };\n    render(){\n        const {Component,pageProps,store} = this.props;\n        return (\n            <Container>\n                <Provider store={store}>\n                    <Component {...pageProps} />\n                </Provider>\n            </Container>\n        )\n    }\n};\n\nexport default withRedux(makeStore)(MyApp);"]},"metadata":{},"sourceType":"module"}